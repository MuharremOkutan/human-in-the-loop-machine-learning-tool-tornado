version: '2.0'

# To access data postgres writes within container from host machine
services:
  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.2.4
    environment:
        - xpack.monitoring.enabled=false
        - xpack.graph.enabled=false
        - xpack.watcher.enabled=false
        - xpack.security.enabled=false
    volumes:
      - ./docker_data/elasticsearch/data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
  kibana:
    image: docker.elastic.co/kibana/kibana:6.2.4
    ports:
      - '5601:5601'
  myapp:
    build: .
    environment:
      RAILS_ENV: "development"
      REDIS_URL: "redis://redis:6379"
    volumes:
      - .:/myapp
    ports:
      - "3000:3000"
    depends_on:
      - redis
      - elasticsearch
      - kibana
    command: bash -c "bundle install && bin/rails db:migrate RAILS_ENV=development && bin/rails db:seed RAILS_ENV=development && rm -f tmp/pids/server.pid && bundle exec rails s -p 3000 -b '0.0.0.0'"
  sidekiq:
    build: .
    command: bundle exec sidekiq
    environment:
      RAILS_ENV: "development"
      REDIS_URL: "redis://redis:6379"
    volumes:
      - .:/myapp
    depends_on:
      - redis
      - myapp

